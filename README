

== Welcome to The Extensible Api for Reconnaissance (EAR) 

==About

The EAR is a rails project designed to make it easy to discover interesting facts about organizations, users, computers, and networks. 

The core concepts of the EAR are the object model (implemented and database-backed with Active Record) and the tasks (implemented as ruby scripts) to modify those objects. These modules are simple to create, infinitely extensible, and have just enough structure to extend the framework in useful ways.

The EAR makes it easy to keep track of the source of new data by maintaining the relationship between objects and tasks for you. For example, if you add a host object, and run a 'whois' task, you'll find that the address, user and domain generated by the whois task are now children of that host. You can programmatically query and inspect these relationships. 

== News

12/16/2011 - The EAR Project has been updated to Rails 3!

== Setup

EAR has a number of external (mainly gem) dependencies managed by bundler.  

To set up EAR, simply run 'bundle install' to obtain the dependencies - This will install all default gem dependencies.

The EAR is currently tested and working on:
 - OS X 10.5.x+
 - Ubuntu Linux 9.10+  

== Getting Started with the EAR

You'll need to configure a database (it's a rails app, after all) before you can use the app. Do this in ear/config/database.yml, a sample has been provided. - Sqlite is fine for small databases. Use Postgres (homebrew makes this easy on OSX) or MySQL for anything of a decent size. 

Once you have a database configuration, run the following:

$ rake db:migrate

Console Version: To get started, simply run $ app/script/console - this will give you access to an irb shell from which you can create objects and run tasks. 

 - Creating an object: $ h = Host.create(:ip => "8.8.8.8")
 - h.run_task("Whois")

== Web Access

NOT CURRENTLY IMPLEMENTED

== Other

The Ear also has a few utilities which you may find of use: 

 - gather.rb: This utility sets up a packet sniffer on the local machine, which automatically creates Host objects within the EAR's database. These host objects are then available to you within the EAR. This is a fun & easy way to find out more information about the systems your host is communicating with.
